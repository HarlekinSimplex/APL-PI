:Namespace I2C
    ⍝ Converted from the quick2wire-python-api
    ⍝ For more information see https://github.com/quick2wire/quick2wire-python-api

    I2C_READ_BUFFER_SIZE←255

    ∇ r←Init dummy
      'Open'⎕NA'I libi2c-com.so|OpenI2C I I =I'                 ⍝ bus, extra_open_flags, err
      'Close'⎕NA'I libi2c-com.so|CloseI2C =I'                   ⍝ err

      'WriteBytes'⎕NA'I libi2c-com.so|WriteBytes I <#U1[] =I'   ⍝ address, input_bytes[], err
      'WriteChar'⎕NA'I libi2c-com.so|WriteBytes I <#C =I'       ⍝ address, input_bytes[], err
      'WriteArray'⎕NA'I libi2c-com.so|WriteBytes I <U1[] =I'    ⍝ address, input_bytes[], err

      '__ReadBytes' ⎕NA'I libi2c-com.so|ReadBytes  I =#U1 =I'   ⍝ address, output_buffer[], err
      '__ReadChar'  ⎕NA'I libi2c-com.so|ReadBytes  I =#C =I'    ⍝ address, output_buffer[], err
⍝      '__ReadArray' ⎕NA'I libi2c-com.so|ReadBytes  I =U1[] =I'  ⍝ address, output_buffer[], err




      r←0
    ∇

    ∇ r←ReadBytes (I2CAddress ErrorCode)
       r←__ReadChar I2CAddress I2CReadBufferSize⍴0 ErrorCode   ⍝ Default would be a byte counted array of 255 zeros
    ∇

    ∇ r←ReadChar (I2CAddress ErrorCode)
        r←__ReadChar I2CAddress I2CReadBufferSize⍴0 ErrorCode  ⍝ same as with bytes
    ∇

⍝    ∇ r←ReadBytes (I2CAddress, ErrorCode)
⍝        r←__ReadArray I2CAddress ????? ErrorCode                  ⍝ No clue what this may be
⍝    ∇
 
    ∇ r←UnInit dummy;fns
      :If 0≠⍴fns←⎕NL ¯3.6
          r←Close 0
          ⎕EX fns ⍝ Unload the DLL by expunging all
          r←0
      :EndIf
    ∇

:EndNamespace
